{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all-books/all-books.component.css","webpack:///./src/app/all-books/all-books.component.html","webpack:///./src/app/all-books/all-books.component.ts","webpack:///./src/app/all-characters/all-characters.component.css","webpack:///./src/app/all-characters/all-characters.component.html","webpack:///./src/app/all-characters/all-characters.component.ts","webpack:///./src/app/all-houses/all-houses.component.css","webpack:///./src/app/all-houses/all-houses.component.html","webpack:///./src/app/all-houses/all-houses.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book/book.component.css","webpack:///./src/app/book/book.component.html","webpack:///./src/app/book/book.component.ts","webpack:///./src/app/character/character.component.css","webpack:///./src/app/character/character.component.html","webpack:///./src/app/character/character.component.ts","webpack:///./src/app/got-home/got-home.component.css","webpack:///./src/app/got-home/got-home.component.html","webpack:///./src/app/got-home/got-home.component.ts","webpack:///./src/app/gotdata.service.ts","webpack:///./src/app/house/house.component.css","webpack:///./src/app/house/house.component.html","webpack:///./src/app/house/house.component.ts","webpack:///./src/app/notfound/notfound.component.css","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--page to display all books-->\\n<div class=\\\"container\\\" id=\\\"contents\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col mb-2\\\">\\n      <img src=\\\"/src/gotbackgrounds.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"allBooks.length > 0\\\">\\n    <!--if data exists-->\\n    <div *ngFor=\\\"let book of allBooks\\\" class=\\\"col\\\">\\n      <div class=\\\"card border-warning mb-3 text-center\\\" style=\\\"width: 18rem;\\\">\\n        <div class=\\\"card-header\\\">Book</div>\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\" *ngIf=\\\"book.name; else noName\\\">{{book.name}}</h5>\\n          <ng-template #noName>\\n            <h5 class=\\\"card-title\\\">Anonymous</h5>\\n          </ng-template>\\n          <p class=\\\"card-text\\\"></p>\\n        </div>\\n        <p class=\\\"list-group-item\\\" *ngIf=\\\"book.publisher; else noPublisher\\\">Publisher: {{book.publisher}}</p>\\n        <ng-template #noPublisher>\\n          <p class=\\\"list-group-item\\\">Publisher: Unknown</p>\\n        </ng-template>\\n\\n        <p class=\\\"list-group-item\\\" *ngIf=\\\"book.authors && book.authors.length >= 1; else noAuthors\\\">Authors: <span *ngFor=\\\"let author of book.authors;let first=first;let last=last\\\">{{author}}{{last\\n            ? '':', '}}\\n          </span></p>\\n        <ng-template #noAuthors>\\n          <p class=\\\"list-group-item\\\">Authors: Unknown</p>\\n        </ng-template>\\n        <a href=\\\"#\\\" class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/books',book.url]\\\">Details</a>\\n      </div>\\n\\n    </div>\\n    <!--End of col div and ngFor loop-->\\n  </div>\\n  <!--End of row and ngIf block-->\\n</div>\\n<!--End of container - #contents-->\"","//all-books component\n\nimport { Component, OnInit } from '@angular/core';\nimport { GotdataService } from \"../gotdata.service\";\n\n@Component({\n  selector: 'app-all-books',\n  templateUrl: './all-books.component.html',\n  styleUrls: ['./all-books.component.css']\n})\n\nexport class AllBooksComponent implements OnInit {\n  public allBooks;\t//declaring class member\n  \n  //declaring http service instance in the constructor\n  constructor(public gotDataService:GotdataService) { }\n\n  ngOnInit() {\n    this.allBooks = this.gotDataService.getAllBooks().subscribe(//converting observable into data\n      data => {\n        this.allBooks = data;\n        console.log(this.allBooks);\n        this.allBooks = this.gotDataService.getSortData(this.allBooks);//sorting \n        console.log(this.allBooks);\n      },\n      error => {\n        console.log(\"some error occurred\");\n        this.gotDataService.handleError(error);\n      }\n    )\n    console.log(this.allBooks);\n  }\n}","module.exports = \"\"","module.exports = \"<!--page to display all characters-->\\n<div class=\\\"container\\\" id=\\\"contents\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col mb-2\\\">\\n      <img src=\\\"/src/gotbackgrounds.jpg\\\" height=\\\"100%\\\" width=\\\"100%\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"allCharacters.length > 0\\\">\\n    <!--if data exists-->\\n    <div *ngFor=\\\"let character of allCharacters\\\" class=\\\"col\\\">\\n      <div class=\\\"card border-primary mb-3 text-center\\\" style=\\\"width: 18rem;\\\">\\n        <div class=\\\"card-header\\\">Character</div>\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\" *ngIf=\\\"character.name; else noName\\\">{{character.name}}</h5>\\n          <ng-template #noName>\\n            <h5 class=\\\"card-title\\\">Anonymous</h5>\\n          </ng-template>\\n          <p class=\\\"card-text\\\"></p>\\n        </div>\\n        <p class=\\\"list-group-item\\\" *ngIf=\\\"character.gender; else noGender\\\">Gender: {{character.gender}}</p>\\n        <ng-template #noGender>\\n          <p class=\\\"list-group-item\\\">Gender: Unknown</p>\\n        </ng-template>\\n        <p class=\\\"list-group-item\\\" *ngIf=\\\"character.culture; else noCulture\\\">Culture: {{character.culture}}</p>\\n        <ng-template #noCulture>\\n          <p class=\\\"list-group-item\\\">Culture: Unknown</p>\\n        </ng-template>\\n        <a href=\\\"#\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/characters',character.url]\\\">Details</a>\\n      </div>\\n\\n    </div>\\n    <!--End of col div and ngFor loop-->\\n  </div>\\n  <!--End of row and ngIf block-->\\n</div>\\n<!--End of container - #contents-->\"","//all-characters component\n\nimport { Component, OnInit } from '@angular/core';\nimport { GotdataService } from \"../gotdata.service\";\n\n@Component({\n  selector: 'app-all-characters',\n  templateUrl: './all-characters.component.html',\n  styleUrls: ['./all-characters.component.css']\n})\nexport class AllCharactersComponent implements OnInit {\n  \n  public allCharacters;\n  \n  constructor(public gotdataservice: GotdataService) { }\n\n  ngOnInit() {\n    console.log(\"Character Component OnInit Called\");\n    this.allCharacters = this.gotdataservice.getAllCharacters().subscribe(//converting observable into data\n      data => {\n        console.log(\"logging data\");\n        this.allCharacters = data;\n        console.log(this.allCharacters);\n        this.allCharacters = this.gotdataservice.getSortData(this.allCharacters);//sorting \n        console.log(this.allCharacters);\n      },\n      error => {\n        console.log(\"some error occurred\");\n        this.gotdataservice.handleError(error);\n      }\n    )\n    console.log(this.allCharacters);\n  }\n}\n","module.exports = \"\"","module.exports = \"<!--page to display all houses-->\\n<div class=\\\"container\\\" id=\\\"contents\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <img src=\\\"/src/gotbackgrounds.jpg\\\" height=\\\"100%\\\" width=\\\"100%\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"allHouses.length > 0\\\">\\n    <!--if data exists-->\\n    <div *ngFor=\\\"let house of allHouses\\\" class=\\\"col\\\">\\n      <div class=\\\"card border-success mb-3 text-center\\\" style=\\\"width: 18rem;\\\">\\n        <div class=\\\"card-header\\\">House</div>\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\" *ngIf=\\\"house.name; else noName\\\">{{house.name}}</h5>\\n          <ng-template #noName>\\n            <h5 class=\\\"card-title\\\">Anonymous</h5>\\n          </ng-template>\\n          <p class=\\\"card-text\\\"></p>\\n        </div>\\n        <p class=\\\"list-group-item\\\" *ngIf=\\\"house.region; else noRegion\\\">Region: {{house.region}}</p>\\n        <ng-template #noRegion>\\n          <p class=\\\"list-group-item\\\">Region: Unknown</p>\\n        </ng-template>\\n\\n        <p class=\\\"list-group-item\\\" *ngIf=\\\"house.words; else noWords\\\">Words: {{house.words}}</p>\\n        <ng-template #noWords>\\n          <p class=\\\"list-group-item\\\">Words: Unknown</p>\\n        </ng-template>\\n        <a href=\\\"#\\\" class=\\\"btn btn-success\\\" [routerLink]=\\\"['/houses',house.url]\\\">Details</a>\\n      </div>\\n\\n    </div>\\n    <!--End of col div and ngFor loop-->\\n  </div>\\n  <!--End of row and ngIf block-->\\n</div>\\n<!--End of container - #contents-->\"","//all-houses component\n\nimport { Component, OnInit } from '@angular/core';\nimport { GotdataService } from \"../gotdata.service\";\n\n@Component({\n  selector: 'app-all-houses',\n  templateUrl: './all-houses.component.html',\n  styleUrls: ['./all-houses.component.css']\n})\nexport class AllHousesComponent implements OnInit {\n  public allHouses;\n  constructor(public gotDataService:GotdataService) { }\n\n  ngOnInit() {\n    console.log(\"House Component OnInit Called\");\n    this.allHouses = this.gotDataService.getAllHouses().subscribe(//converting observable into data\n      data => {\n        console.log(\"logging data\");\n        this.allHouses = data;\n        console.log(this.allHouses);\n        this.allHouses = this.gotDataService.getSortData(this.allHouses);//sorting \n        console.log(this.allHouses);\n      },\n      error => {\n        console.log(\"some error occurred\");\n        this.gotDataService.handleError(error);\n      }\n    )\n    console.log(this.allHouses);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!--The shell page-->\\n<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\\\" style=\\\"background-color: #343A40;\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Game Of Thrones</a>\\n\\n    <!--Navbar toggler-->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n      aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown dropright\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\"\\n            aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            Choose...\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/books']\\\">Books</a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/characters']\\\">Characters</a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/houses']\\\">Houses</a>\\n          </div>\\n        </li>\\n\\n      </ul>\\n\\n    </div>\\n  </nav>\\n  <br /><br/><br />\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'game-of-thrones';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from \"@angular/router\";\nimport { AppComponent } from './app.component';\n\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { BookComponent } from './book/book.component';\nimport { CharacterComponent } from './character/character.component';\nimport { HouseComponent } from './house/house.component';\nimport { GotHomeComponent } from './got-home/got-home.component';\nimport { AllBooksComponent } from './all-books/all-books.component';\nimport { AllCharactersComponent } from './all-characters/all-characters.component';\nimport { AllHousesComponent } from './all-houses/all-houses.component';\n\nimport { GotdataService } from \"./gotdata.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotfoundComponent,\n    BookComponent,\n    CharacterComponent,\n    HouseComponent,\n    GotHomeComponent,\n    AllBooksComponent,\n    AllCharactersComponent,\n    AllHousesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'home', component: GotHomeComponent },\n      { path: 'books', component: AllBooksComponent },\n      { path: 'characters', component: AllCharactersComponent },\n      { path: 'houses', component: AllHousesComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: 'books/:ID', component: BookComponent },\n      { path: 'characters/:ID', component: CharacterComponent },\n      { path: 'houses/:ID', component: HouseComponent },\n      { path: '**', component: NotfoundComponent }\n    ])\n  ],\n  providers: [GotdataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"/*book component css file*/\\r\\n\\r\\n.bookClass{\\r\\n    background-color: #343A40;\\r\\n    color: white;\\r\\n}\\r\\n\"","module.exports = \"<!-- Page to display information about a specific book -->\\n\\n<div class=\\\"container bookClass\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"book\\\">\\n    <div class=\\\"col-1 mt-4\\\">\\n      <a class=\\\"btn btn-warning\\\" (click)=goBackToPreviousPage()>Go Back</a>\\n    </div>\\n    <div class=\\\"col-11\\\">\\n      \\n      <h1 class=\\\"display-3 text-center\\\" *ngIf=\\\"book.name; else noName\\\">Book-{{book.name}}</h1>\\n      <ng-template #noName>\\n        <h1 class=\\\"display-3 text-center\\\">Anonymous</h1>\\n      </ng-template>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"book\\\">\\n    <div class=\\\"col\\\">\\n      <table class=\\\"table table-borderless\\\">\\n        <tbody *ngIf=\\\"book\\\">\\n          <tr class=\\\"bg-warning\\\">\\n            <th scope=\\\"row\\\">ISBN</th>\\n            <td *ngIf=\\\"book.isbn; else noISBN\\\">{{book.isbn}}</td>\\n            <ng-template #noISBN>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"\\\">\\n            <th scope=\\\"row\\\">Authors</th>\\n            <td *ngIf=\\\"book.authors && book.authors.length > 1; else noAuthors\\\">\\n              <span *ngFor=\\\"let author of book.authors;let first=first;let last=last\\\">{{author}}{{last ? '':', '}}\\n              </span>\\n            </td>\\n            <ng-template #noAuthors>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-warning\\\">\\n            <th scope=\\\"row\\\">Number of pages</th>\\n            <td *ngIf=\\\"book.numberOfPages; else nonumberOfPages\\\">\\n              {{book.numberOfPages}}\\n            </td>\\n            <ng-template #nonumberOfPages>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"\\\">\\n            <th scope=\\\"row\\\">publisher</th>\\n            <td *ngIf=\\\"book.publisher; else noPublisher\\\">\\n              {{book.publisher}}\\n            </td>\\n            <ng-template #noPublisher>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-warning\\\">\\n            <th scope=\\\"row\\\">Country</th>\\n            <td *ngIf=\\\"book.country; else noCountry\\\">\\n              {{book.country}}\\n            </td>\\n            <ng-template #noCountry>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"\\\">\\n            <th scope=\\\"row\\\">Media Type</th>\\n            <td *ngIf=\\\"book.mediaType; else noMediaType\\\">\\n              {{book.mediaType}}\\n            </td>\\n            <ng-template #noMediaType>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-warning\\\">\\n            <th scope=\\\"row\\\">Released</th>\\n            <td *ngIf=\\\"book.released; else noReleased\\\">\\n              {{book.released | date}}\\n            </td>\\n            <ng-template #noReleased>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","//book component\n\nimport { Component, OnInit } from '@angular/core';\n\n//importing router related code\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GotdataService } from \"../gotdata.service\";\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css'],\n  providers: [Location]\n})\nexport class BookComponent implements OnInit {\n\n  public book;\n  constructor(private activatedroute: ActivatedRoute, private router: Router, public gotservice: GotdataService\n    , private location: Location) { }\n\n  ngOnInit() {\n    //getting the character ID from the router\n    let url = this.activatedroute.snapshot.paramMap.get('ID');\n    console.log(url);\n\n    let bookId = url.replace(/^\\D+/g, ''); // replace all leading non-digits with nothing\n    console.log(bookId);\n\n    this.gotservice.getBookInformation(bookId).subscribe(\n      data => {\n        console.log(data);\n        this.book = data;\n      },\n      error => {\n        console.log(\"Some error occured\");\n        console.log(error.errorMessage);\n      }\n    );        \n  }\n  public goBackToPreviousPage(): any {\n    this.location.back();\n  }\n}","module.exports = \"/* character component */\\r\\n\\r\\n.heading{\\r\\n    background-color: #ececec;\\r\\n    width:100%;\\r\\n}\\r\\n\\r\\n.table{\\r\\n    margin:auto;\\r\\n}\\r\\n\\r\\nth{\\r\\n    text-align:center;    \\r\\n}\\r\\n\\r\\n.characterClass{\\r\\n    background-color: #343A40;\\r\\n    color: white;\\r\\n}\"","module.exports = \"<!--page to display information about the specific book -->\\n<div class=\\\"container characterClass\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"character\\\">    \\n    <div class=\\\"col-1 mt-4\\\">\\n      <a class=\\\"btn btn-primary\\\" (click)=goBackToPreviousPage()>Go Back</a>\\n    </div>\\n    <div class=\\\"col-11\\\">\\n      <h1 class=\\\"display-3 text-center\\\" *ngIf=\\\"character.name; else noName\\\"> {{character.name}}</h1>\\n      <ng-template #noName>\\n        <h1 class=\\\"display-3 text-center\\\">Anonymous</h1>\\n      </ng-template>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"character\\\">\\n    <div class=\\\"col\\\">\\n      <table class=\\\"table table-borderless\\\">\\n        <tbody *ngIf=\\\"character\\\">\\n          <tr class=\\\"bg-primary\\\">\\n            <th scope=\\\"row\\\">Gender</th>\\n            <td *ngIf=\\\"character.gender; else noGender\\\">{{character.gender}}</td>\\n            <ng-template #noGender>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"\\\">\\n            <th scope=\\\"row\\\">Culture</th>\\n            <td *ngIf=\\\"character.culture; else noCulture\\\">{{character.culture}}</td>\\n            <ng-template #noCulture>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-primary\\\">\\n            <th scope=\\\"row\\\">Born</th>\\n            <td *ngIf=\\\"character.born; else noBorn\\\">{{character.born}}</td>\\n            <ng-template #noBorn>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"\\\">\\n            <th scope=\\\"row\\\">Died</th>\\n            <td *ngIf=\\\"character.died; else noDied\\\">{{character.died}}</td>\\n            <ng-template #noDied>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-primary\\\">\\n            <th scope=\\\"row\\\">Titles</th>\\n            <td *ngIf=\\\"character.titles && character.titles.length > 1; else noTitles\\\">\\n              <span *ngFor=\\\"let title of character.titles;let first=first;let last=last\\\">{{title}}{{last ? '':', '}}\\n              </span>\\n            </td>\\n            <ng-template #noTitles>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"\\\">\\n            <th scope=\\\"row\\\">Aliases</th>\\n            <td *ngIf=\\\"character.aliases && character.aliases.length > 1; else noAliases\\\">\\n              <span *ngFor=\\\"let alias of character.aliases;let first=first;let last=last\\\">{{alias}}{{last ? '':', '}}</span>\\n            </td>\\n            <ng-template #noAliases>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-primary\\\">\\n            <th scope=\\\"row\\\">Father</th>\\n            <td *ngIf=\\\"character.father; else noFather\\\">{{character.father}}</td>\\n            <ng-template #noFather>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"\\\">\\n            <th scope=\\\"row\\\">Mother</th>\\n            <td *ngIf=\\\"character.mother; else noMother\\\">{{character.mother}}</td>\\n            <ng-template #noMother>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-primary\\\">\\n            <th scope=\\\"row\\\">TV Series</th>\\n            <td *ngIf=\\\"character.tvSeries.length !=undefined && character.tvSeries.length > 1; else noTvSeries\\\"><span *ngFor=\\\"let series of character.tvSeries;let first=first;let last=last\\\">{{series}}{{last\\n                ? '':', '}}</span></td>\\n            <ng-template #noTvSeries>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"\\\">\\n            <th scope=\\\"row\\\">Played By</th>\\n            <td *ngIf=\\\"character.playedBy.length !=undefined && character.playedBy.length > 1; else noPlayedBy\\\"><span *ngFor=\\\"let playedby of character.playedby;let first=first;let last=last\\\">{{playedby}}{{last\\n                    ? '':', '}}</span></td>\\n            <ng-template #noPlayedBy>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>          \\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n//importing router related code\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GotdataService } from \"../gotdata.service\";\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-character',\n  templateUrl: './character.component.html',\n  styleUrls: ['./character.component.css'],\n  providers:[Location]\n})\nexport class CharacterComponent implements OnInit {\n\n  public character;\n\n  constructor(private activatedroute:ActivatedRoute,private router:Router,public gotservice:GotdataService\n    , private location: Location) { }\n\n  ngOnInit() {\n    //getting the character ID from the router\n    let url = this.activatedroute.snapshot.paramMap.get('ID');\n    console.log(url);\n\n    let characterId = url.replace(/^\\D+/g, ''); // replace all leading non-digits with nothing\n    console.log(characterId);\n\n    this.gotservice.getCharacterInformation(characterId).subscribe(\n      data=>{\n        console.log(data);\n        this.character=data;        \n      },\n      error=>{\n        console.log(\"Some error occured\");\n        console.log(error.errorMessage);        \n      }\n    );        \n  }\n\n  public goBackToPreviousPage(): any {\n    this.location.back();\n  }\n}","module.exports = \"\"","module.exports = \"<!-- home page all game-of-thrones, displaying all contents books, characters and houses -->\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <img src=\\\"src\\\\assets\\\\images\\\\gotbackgrounds.jpg\\\" class=\\\"img-fluid\\\" alt=\\\"Game of thrones\\\">\\n    </div>\\n  </div>\\n  <br />\\n  <div class=\\\"row\\\" *ngIf=\\\"alldata.length > 0\\\">\\n    <div *ngFor=\\\"let data of alldata\\\" class=\\\"col\\\">\\n      <div *ngIf=\\\"data.url.includes('characters')\\\">\\t\\t<!-- if url contains the word 'characters' this div will be rendered  -->\\n        <div class=\\\"card border-primary mb-3 text-center\\\" style=\\\"width: 18rem;\\\">\\n          <div class=\\\"card-header\\\">Character</div>\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\" *ngIf=\\\"data.name; else noName\\\">{{data.name}}</h5>\\n            <ng-template #noName>\\n              <h5 class=\\\"card-title\\\">Anonymous</h5>\\n            </ng-template>\\n            <p class=\\\"card-text\\\"></p>\\n          </div>\\n          <p class=\\\"list-group-item\\\" *ngIf=\\\"data.gender; else noGender\\\">Gender: {{data.gender}}</p>\\n          <ng-template #noGender>\\n            <p class=\\\"list-group-item\\\">Gender: Unknown</p>\\n          </ng-template>\\n          <p class=\\\"list-group-item\\\" *ngIf=\\\"data.culture; else noCulture\\\">Culture: {{data.culture}}</p>\\n          <ng-template #noCulture>\\n            <p class=\\\"list-group-item\\\">Culture: Unknown\\n            </p>\\n          </ng-template>\\n          <a href=\\\"#\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/characters',data.url]\\\">Details</a>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"data.url.includes('books')\\\"> <!-- if url contains the word 'books' this div will be rendered  -->\\n        <div class=\\\"card border-warning mb-3 text-center\\\" style=\\\"width: 18rem;\\\">\\n          <div class=\\\"card-header\\\">Book</div>\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\" *ngIf=\\\"data.name; else noName\\\">{{data.name}}</h5>\\n            <ng-template #noName>\\n              <h5 class=\\\"card-title\\\">Anonymous</h5>\\n            </ng-template>\\n            <p class=\\\"card-text\\\"></p>\\n          </div>\\n\\n          <p class=\\\"list-group-item\\\" *ngIf=\\\"data.publisher; else noPublisher\\\">Publisher: {{data.publisher}}</p>\\n          <ng-template #noPublisher>\\n            <p class=\\\"list-group-item\\\">Publisher: Unknown</p>\\n          </ng-template>\\n\\n          <p class=\\\"list-group-item\\\" *ngIf=\\\"data.authors && data.authors.length >= 1; else noAuthors\\\">Authors: <span *ngFor=\\\"let author of data.authors;let first=first;let last=last\\\">{{author}}{{last\\n              ? '':', '}}\\n            </span></p>\\n          <ng-template #noAuthors>\\n            <p class=\\\"list-group-item\\\">Authors: Unknown</p>\\n          </ng-template>\\n\\n\\n          <a href=\\\"#\\\" class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/books',data.url]\\\">Details</a>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"data.url.includes('houses')\\\"> <!-- if url contains the word 'houses' this div will be rendered  -->\\n        <div class=\\\"card border-success mb-3 text-center\\\" style=\\\"width: 18rem;\\\">\\n          <div class=\\\"card-header\\\">House</div>\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\" *ngIf=\\\"data.name; else noName\\\">{{data.name}}</h5>\\n\\n            <ng-template #noName>\\n              <h5 class=\\\"card-title\\\">Anonymous</h5>\\n            </ng-template>\\n            <p class=\\\"card-text\\\"></p>\\n          </div>\\n          <p class=\\\"list-group-item\\\" *ngIf=\\\"data.region; else noRegion\\\">Region: {{data.region}}</p>\\n          <ng-template #noRegion>\\n            <p class=\\\"list-group-item\\\">Region: Unknown</p>\\n          </ng-template>\\n\\n          <p class=\\\"list-group-item\\\" *ngIf=\\\"data.words; else noWords\\\">Words: {{data.words}}</p>\\n          <ng-template #noWords>\\n            <p class=\\\"list-group-item\\\">Words: Unknown</p>\\n          </ng-template>\\n          <a href=\\\"#\\\" class=\\\"btn btn-success\\\" [routerLink]=\\\"['/houses',data.url]\\\">Details</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","//got-home component\n\nimport { Component, OnInit } from '@angular/core';\nimport { GotdataService } from \"../gotdata.service\";\n\n@Component({\n  selector: 'app-got-home',\n  templateUrl: './got-home.component.html',\n  styleUrls: ['./got-home.component.css']\n})\n\nexport class GotHomeComponent implements OnInit {\n  public allcharacters: any;\n  public allbooks: any;\n  public allhouses: any;\n\n  public alldata: any[] = [];\n\n\n  constructor(public gotservice: GotdataService) { }\n\n  ngOnInit() {\n\t/* On initializing, all characters, books and houses will be requested through the service\n\tusing observables */\n  \n    this.gotservice.getAllCharacters().subscribe(\n      data => {\n        console.log(data);\n        this.allcharacters = data;\n        console.log(data.name);\n        \n        this.alldata = this.alldata.concat(this.allcharacters);\n      },\n      error => {\n        console.log(\"some error occured\");\n        console.log(error.errorMessage);\n      }\n    );\n\n    this.gotservice.getAllBooks().subscribe(\n      data => {\n        console.log(data);\n        this.allbooks = data;\n        this.alldata = this.alldata.concat(this.allbooks);\n      },\n      error => {\n        console.log(\"some error occured\");\n        console.log(error.errorMessage);\n      }\n    );\n\n    this.gotservice.getAllHouses().subscribe(\n      data => {\n        console.log(data);\n        this.allhouses = data;\n        this.alldata = this.alldata.concat(data);        \n      },\n      error => {\n        console.log(\"some error occured\");\n        console.log(error.errorMessage);\n      }\n    );\n  }\n\n  ngDoCheck(){\n    \n\t/* since observables are asynchronous; ngDoCheck() will check for any updates and accordingly updates 'alldata' and using the compare() it will display all the data in the alphabetical order */\n\t\n    function compare(a, b) {\n      if (a.name < b.name)\n        return -1;\n      if (a.name > b.name)\n        return 1;\n      return 0;\n    }\n    this.alldata = this.alldata.sort(compare);\n  }  \n}","/* 'gotdata' HTTP service */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, Subject, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GotdataService {\n  public baseUrl = \"https://anapioficeandfire.com/api\";\n\n  public charactersArray;\n  public housesArray;\n  public booksArray;\n\n  public allData;\n\n  constructor(public httpclient: HttpClient) { }\n\n  public handleError(err: HttpErrorResponse) {\n    console.log(\"Handling the error in http calls\");\n    console.log(err.message);\n    return Observable.throw(err.message);\n  }\n\n  //method to get 50 characters\n  public getAllCharacters(): any {\n    let myResponse = this.httpclient.get(this.baseUrl + '/characters' + '?pageSize=50');\n    console.log(myResponse);\n    return myResponse;\n  }\n\n  //method to get 50 books\n  public getAllBooks(): any {\n    let myResponse = this.httpclient.get(this.baseUrl + '/books' + '?pageSize=50');\n    console.log(myResponse);\n    return myResponse;\n  }\n\n  //method to get 50 houses\n  public getAllHouses(): any {\n    let myResponse = this.httpclient.get(this.baseUrl + '/houses' + '?pageSize=50');\n    console.log(myResponse);\n    return myResponse;\n  }\n\n  //method to get single character information\n  public getCharacterInformation(characterId): any {\n    let myResponse = this.httpclient.get(this.baseUrl + '/characters/' + characterId);\n    return myResponse;\n  }\n\n  //method to get single book information\n  public getBookInformation(bookId): any {\n    let myResponse = this.httpclient.get(this.baseUrl + '/books/' + bookId);\n    return myResponse;\n  }\n\n  //method to get single house information\n  public getHouseInformation(houseId): any {\n    let myResponse = this.httpclient.get(this.baseUrl + '/houses/' + houseId);\n    return myResponse;\n  }\n\n  //sorting the data\n  public getSortData(rawData): any {\n    rawData.sort(function (name1, name2) {\n      if (name1.name < name2.name) {\n        return -1;\n      } else if (name1.name > name2.name) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return rawData;\n  }\n} // 'gotdata' HTTP service ends here","module.exports = \"/*houseClass css*/\\r\\n\\r\\n.houseClass{\\r\\n    background-color: #343A40;\\r\\n    color: white;\\r\\n}\"","module.exports = \"<!-- Page to display a particular house information -->\\n<div class=\\\"container houseClass\\\">\\n  \\n  <div class=\\\"row\\\" *ngIf=\\\"house\\\">\\n    <div class=\\\"col-1 mt-4\\\">\\n      <a class=\\\"btn btn-success\\\" (click)=goBackToPreviousPage()>Go Back</a>\\n    </div>\\n    <div class=\\\"col-11\\\">\\n      <h1 class=\\\"display-3 text-center\\\" *ngIf=\\\"house.name; else noName\\\">{{house.name}}</h1>\\n      <ng-template #noName>\\n        <h1 class=\\\"display-3 text-center\\\">House-Anonymous</h1>\\n      </ng-template>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"house\\\">\\n    <div class=\\\"col\\\">\\n      <table class=\\\"table table-borderless\\\">\\n        <tbody *ngIf=\\\"house\\\">\\n          <tr>\\n            <th scope=\\\"row\\\">Region</th>\\n            <td *ngIf=\\\"house.region; else noRegion\\\">{{house.region}}</td>\\n            <ng-template #noRegion>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-success\\\">\\n            <th scope=\\\"row\\\">Coat of Arms</th>\\n            <td *ngIf=\\\"house.coatOfArms; else noCoatOfArms\\\">{{house.coatOfArms}}</td>\\n            <ng-template #noCoatOfArms>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Words</th>\\n            <td *ngIf=\\\"house.words; else noWords\\\">{{house.words}}</td>\\n            <ng-template #noWords>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-success\\\">\\n            <th scope=\\\"row\\\">Titles</th>\\n            <td *ngIf=\\\"house.titles && house.titles.length > 1; else noTitles\\\">\\n              <span *ngFor=\\\"let title of house.titles;let first=first;let last=last\\\">{{title}}{{last ? '':', '}}\\n              </span>\\n            </td>\\n            <ng-template #noTitles>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Seats</th>\\n            <td *ngIf=\\\"house.seats && house.seats.length > 1; else noSeats\\\">\\n              <span *ngFor=\\\"let seat of house.seats;let first=first;let last=last\\\">{{seat}}{{last ? '':', '}}\\n              </span>\\n            </td>\\n            <ng-template #noSeats>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-success\\\">\\n            <th scope=\\\"row\\\">Heir</th>\\n            <td *ngIf=\\\"house.heir; else noHeir\\\">{{house.heir}}</td>\\n            <ng-template #noHeir>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n         \\n          <tr>\\n            <th scope=\\\"row\\\">Founded</th>\\n            <td *ngIf=\\\"house.founded; else noFounded\\\">{{house.founded}}</td>\\n            <ng-template #noFounded>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-success\\\">\\n            <th scope=\\\"row\\\">Founder</th>\\n            <td *ngIf=\\\"house.founder; else noFounder\\\">{{house.founder}}</td>\\n            <ng-template #noFounder>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">Died Out</th>\\n            <td *ngIf=\\\"house.diedOut; else noDiedOut\\\">{{house.diedOut}}</td>\\n            <ng-template #noDiedOut>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n          <tr class=\\\"bg-success\\\">\\n            <th scope=\\\"row\\\">Ancestral Weapons</th>\\n            <td *ngIf=\\\"house.ancestralWeapons && house.ancestralWeapons.length > 1; else noAncestralWeapon\\\">\\n              <span *ngFor=\\\"let ancestralWeapon of house.ancestralWeapons;let first=first;let last=last\\\">{{ancestralWeapon}}{{last ? '':', '}}\\n              </span>\\n            </td>\\n            <ng-template #noAncestralWeapon>\\n              <td>N/A</td>\\n            </ng-template>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n//importing router related code\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GotdataService } from \"../gotdata.service\";\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-house',\n  templateUrl: './house.component.html',\n  styleUrls: ['./house.component.css'],\n  providers: [Location]\n})\nexport class HouseComponent implements OnInit {\n\n  public house;\n\n  constructor(private activatedroute: ActivatedRoute, private router: Router, public gotservice: GotdataService\n    , private location: Location) { }\n\n  ngOnInit() {\n    //getting the character ID from the router\n    let url = this.activatedroute.snapshot.paramMap.get('ID');\n    console.log(url);\n\n    let houseId = url.replace(/^\\D+/g, ''); // replace all leading non-digits with nothing\n    console.log(houseId);\n\n    this.gotservice.getHouseInformation(houseId).subscribe(\n      data => {\n        console.log(data);\n        this.house = data;\n      },\n      error => {\n        console.log(\"Some error occured\");\n        console.log(error.errorMessage);\n      }\n    );        \n  }\n  public goBackToPreviousPage(): any {\n    this.location.back();\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- 'Not found' component -->\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <img src=\\\"/src/404.png\\\" class=\\\"img-fluid rounded mx-auto d-block\\\" width=\\\"100%\\\" height=\\\"70%\\\" alt=\\\"Page not Found!!!\\\">\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}